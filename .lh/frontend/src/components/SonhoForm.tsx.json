{
    "sourceFile": "frontend/src/components/SonhoForm.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1747786390375,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747786579422,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,4 @@\n-// components/SonhoForm.tsx\r\n-\r\n interface SonhoFormProps {\r\n   data: string\r\n   setData: (value: string) => void\r\n   texto: string\r\n"
                },
                {
                    "date": 1747787404319,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,6 @@\n+// components/SonhoForm.tsx\r\n+\r\n interface SonhoFormProps {\r\n   data: string\r\n   setData: (value: string) => void\r\n   texto: string\r\n"
                },
                {
                    "date": 1747787458268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,4 @@\n-// components/SonhoForm.tsx\r\n-\r\n interface SonhoFormProps {\r\n   data: string\r\n   setData: (value: string) => void\r\n   texto: string\r\n"
                }
            ],
            "date": 1747786390375,
            "name": "Commit-0",
            "content": "// components/SonhoForm.tsx\r\n\r\ninterface SonhoFormProps {\r\n  data: string\r\n  setData: (value: string) => void\r\n  texto: string\r\n  setTexto: (value: string) => void\r\n  gravando: boolean\r\n  toggleMic: () => void\r\n  onSubmit: () => void\r\n}\r\n\r\nexport function SonhoForm({\r\n  data,\r\n  setData,\r\n  texto,\r\n  setTexto,\r\n  gravando,\r\n  toggleMic,\r\n  onSubmit,\r\n}: SonhoFormProps) {\r\n  const alterarData = (delta: number) => {\r\n    const novaData = new Date(data + 'T00:00')\r\n    novaData.setDate(novaData.getDate() + delta)\r\n    setData(novaData.toISOString().split('T')[0])\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex gap-2 justify-center items-center\">\r\n        <button onClick={() => alterarData(-1)}>◀</button>\r\n\r\n        <input\r\n          type=\"date\"\r\n          value={data}\r\n          onChange={(e) => setData(e.target.value)}\r\n        />\r\n\r\n        <button onClick={() => alterarData(1)}>▶</button>\r\n      </div>\r\n\r\n      <textarea\r\n        className=\"w-full h-40 p-2 border rounded\"\r\n        placeholder=\"Descreva seu sonho...\"\r\n        value={texto}\r\n        onChange={(e) => setTexto(e.target.value)}\r\n      />\r\n\r\n      <div className=\"flex gap-4\">\r\n        <button\r\n          onClick={toggleMic}\r\n          className={`flex-1 px-4 py-2 text-white rounded ${\r\n            gravando ? 'bg-red-600' : 'bg-gray-600'\r\n          }`}\r\n        >\r\n          {gravando ? 'Gravando… 🎙️' : 'Falar'}\r\n        </button>\r\n\r\n        <button\r\n          onClick={onSubmit}\r\n          disabled={!texto.trim()}\r\n          className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded\"\r\n        >\r\n          Interpretar 🧠\r\n        </button>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n"
        }
    ]
}