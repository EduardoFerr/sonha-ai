{
    "sourceFile": "teste.html",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1747766902710,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747768230933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,18 @@\n <!DOCTYPE html>\r\n <html lang=\"pt-BR\">\r\n <head>\r\n   <meta charset=\"UTF-8\" />\r\n-  <title>Teste de Reconhecimento de Voz</title>\r\n+  <title>Teste de Voz</title>\r\n </head>\r\n <body>\r\n-  <h1>ðŸŽ¤ Teste de Reconhecimento de Voz</h1>\r\n+  <h1>ðŸŽ¤ Reconhecimento de Voz (Web Speech API)</h1>\r\n \r\n   <button id=\"start\">Iniciar</button>\r\n   <button id=\"stop\">Parar</button>\r\n \r\n   <p><strong>Status:</strong> <span id=\"status\">Parado</span></p>\r\n-  <p><strong>Texto reconhecido:</strong></p>\r\n+  <p><strong>Texto:</strong></p>\r\n   <pre id=\"output\"></pre>\r\n \r\n   <script>\r\n     const status = document.getElementById('status');\r\n@@ -20,52 +20,46 @@\n \r\n     const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n \r\n     if (!SpeechRecognition) {\r\n-      alert('Web Speech API nÃ£o Ã© suportada neste navegador.');\r\n+      alert('Seu navegador nÃ£o suporta a Web Speech API');\r\n     } else {\r\n       const recognition = new SpeechRecognition();\r\n       recognition.lang = 'pt-BR';\r\n       recognition.continuous = true;\r\n       recognition.interimResults = true;\r\n \r\n-      recognition.onresult = (event) => {\r\n-        const texto = Array.from(event.results)\r\n-          .map(r => r[0].transcript)\r\n-          .join(' ');\r\n-        output.textContent = texto;\r\n+      recognition.onstart = () => {\r\n+        status.textContent = 'Gravando...';\r\n       };\r\n \r\n+      recognition.onend = () => {\r\n+        status.textContent = 'Parado';\r\n+      };\r\n+\r\n       recognition.onerror = (event) => {\r\n         status.textContent = `Erro: ${event.error}`;\r\n-        console.error('Erro no reconhecimento:', event.error);\r\n+        console.error('Erro:', event.error);\r\n       };\r\n \r\n-      recognition.onstart = () => {\r\n-        status.textContent = 'Gravando...';\r\n+      recognition.onresult = (event) => {\r\n+        const texto = Array.from(event.results)\r\n+          .map(r => r[0].transcript)\r\n+          .join(' ');\r\n+        output.textContent = texto;\r\n       };\r\n \r\n-      recognition.onend = () => {\r\n-        status.textContent = 'Parado';\r\n-      };\r\n-\r\n-      document.getElementById('start').onclick = async () => {\r\n+      document.getElementById('start').addEventListener('click', () => {\r\n         try {\r\n-          const perm = await navigator.permissions?.query({ name: 'microphone' });\r\n-          console.log('PermissÃ£o:', perm?.state);\r\n-          if (perm?.state === 'denied') {\r\n-            alert('PermissÃ£o de microfone negada. Verifique nas configuraÃ§Ãµes do navegador.');\r\n-            return;\r\n-          }\r\n-          recognition.start();\r\n+          recognition.start(); // deve ser chamado diretamente apÃ³s o clique\r\n         } catch (e) {\r\n           console.error('Erro ao iniciar:', e);\r\n         }\r\n-      };\r\n+      });\r\n \r\n-      document.getElementById('stop').onclick = () => {\r\n+      document.getElementById('stop').addEventListener('click', () => {\r\n         recognition.stop();\r\n-      };\r\n+      });\r\n     }\r\n   </script>\r\n </body>\r\n </html>\r\n"
                }
            ],
            "date": 1747766902710,
            "name": "Commit-0",
            "content": "<!DOCTYPE html>\r\n<html lang=\"pt-BR\">\r\n<head>\r\n  <meta charset=\"UTF-8\" />\r\n  <title>Teste de Reconhecimento de Voz</title>\r\n</head>\r\n<body>\r\n  <h1>ðŸŽ¤ Teste de Reconhecimento de Voz</h1>\r\n\r\n  <button id=\"start\">Iniciar</button>\r\n  <button id=\"stop\">Parar</button>\r\n\r\n  <p><strong>Status:</strong> <span id=\"status\">Parado</span></p>\r\n  <p><strong>Texto reconhecido:</strong></p>\r\n  <pre id=\"output\"></pre>\r\n\r\n  <script>\r\n    const status = document.getElementById('status');\r\n    const output = document.getElementById('output');\r\n\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n\r\n    if (!SpeechRecognition) {\r\n      alert('Web Speech API nÃ£o Ã© suportada neste navegador.');\r\n    } else {\r\n      const recognition = new SpeechRecognition();\r\n      recognition.lang = 'pt-BR';\r\n      recognition.continuous = true;\r\n      recognition.interimResults = true;\r\n\r\n      recognition.onresult = (event) => {\r\n        const texto = Array.from(event.results)\r\n          .map(r => r[0].transcript)\r\n          .join(' ');\r\n        output.textContent = texto;\r\n      };\r\n\r\n      recognition.onerror = (event) => {\r\n        status.textContent = `Erro: ${event.error}`;\r\n        console.error('Erro no reconhecimento:', event.error);\r\n      };\r\n\r\n      recognition.onstart = () => {\r\n        status.textContent = 'Gravando...';\r\n      };\r\n\r\n      recognition.onend = () => {\r\n        status.textContent = 'Parado';\r\n      };\r\n\r\n      document.getElementById('start').onclick = async () => {\r\n        try {\r\n          const perm = await navigator.permissions?.query({ name: 'microphone' });\r\n          console.log('PermissÃ£o:', perm?.state);\r\n          if (perm?.state === 'denied') {\r\n            alert('PermissÃ£o de microfone negada. Verifique nas configuraÃ§Ãµes do navegador.');\r\n            return;\r\n          }\r\n          recognition.start();\r\n        } catch (e) {\r\n          console.error('Erro ao iniciar:', e);\r\n        }\r\n      };\r\n\r\n      document.getElementById('stop').onclick = () => {\r\n        recognition.stop();\r\n      };\r\n    }\r\n  </script>\r\n</body>\r\n</html>\r\n"
        }
    ]
}